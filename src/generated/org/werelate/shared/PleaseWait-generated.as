
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	org.werelate.shared
 *	Class: 		PleaseWait
 *	Source: 	/home/dallan/werelate/gedcom-review/src/org/werelate/shared/PleaseWait.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2013.08.22 08:43:04 CDT
 */

package org.werelate.shared
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.containers.ApplicationControlBar;
import mx.containers.Canvas;
import mx.containers.HBox;
import mx.containers.VBox;
import mx.controls.Label;
import mx.controls.ProgressBar;
import mx.controls.Spacer;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.styles.*;




public class PleaseWait
	extends mx.containers.VBox
{

	[Bindable]
/**
 * @private
 **/
	public var countBar : mx.containers.HBox;

	[Bindable]
/**
 * @private
 **/
	public var countLabel : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var heading : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var message : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var progressBar : mx.controls.ProgressBar;




private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.VBox
  ,
  propertiesFactory: function():Object { return {
    width: 400,
    height: 150,
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.ApplicationControlBar
        ,
        propertiesFactory: function():Object { return {
          height: 35,
          percentWidth: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              id: "heading"
              ,
              stylesFactory: function():void {
                this.color = 16777215;
                this.fontWeight = "bold";
                this.textAlign = "center";
              }
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0
              }}
            })
          ]
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.containers.VBox
        ,
        stylesFactory: function():void {
          this.horizontalAlign = "center";
          this.verticalAlign = "middle";
        }
        ,
        propertiesFactory: function():Object { return {
          styleName: "PopUpWindowInset",
          percentHeight: 100.0,
          percentWidth: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Spacer
              ,
              propertiesFactory: function():Object { return {
                height: 5
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.ProgressBar
                    ,
                    id: "progressBar"
                    ,
                    stylesFactory: function():void {
                      this.horizontalCenter = "0";
                      this.trackHeight = 12;
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      width: 350,
                      mode: "manual",
                      visible: false
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.HBox
                    ,
                    id: "countBar"
                    ,
                    stylesFactory: function():void {
                      this.top = "20";
                      this.horizontalAlign = "center";
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      x: 20,
                      width: 330,
                      visible: false,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "countLabel"
                          ,
                          stylesFactory: function():void {
                            this.fontWeight = "bold";
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 60
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "message"
                          ,
                          propertiesFactory: function():Object { return {
                            width: 260
                          }}
                        })
                      ]
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    /**
     * @private
     **/
	public function PleaseWait()
	{
		super();

		mx_internal::_document = this;

		//	our style settings



		//	properties
		this.styleName = "PopUpWindow";
		this.horizontalScrollPolicy = "off";
		this.verticalScrollPolicy = "off";
		this.width = 400;
		this.height = 150;

		//	events
		this.addEventListener("creationComplete", ___PleaseWait_VBox1_creationComplete);

	}

    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);



		super.initialize();
	}



	[Bindable]
	private var _count:int = 0;
	private var _heading:String;
	private var _total:int = 0;
	private var _label:String;
	private var _countSuffix:String;
		
	public function init(heading:String, total:Number, label:String, countSuffix:String=''):void
	{
		_heading = heading;
		_total = total;
		_label = label;
		_count = 0;
		_countSuffix = countSuffix;
	}
	
	private function component_creationComplete(event:Event):void
	{
		heading.text = _heading;
		if (_total < 0) { // indeterminate
			progressBar.label = _label;
			progressBar.indeterminate = true;
			progressBar.visible = true;
		}		
		else if (_total > 0) { // determinate
			progressBar.label = _label;
			progressBar.setProgress(0, _total);
			progressBar.visible = true;
		}
		else { // count bar
			message.text = _label;
			countLabel.text = String(_count);
			countBar.visible = true;
		}
	}
	
	public function set total(total:Number):void 
	{
		_total = total;
		if (_total > 0 && progressBar.indeterminate) {
			progressBar.indeterminate = false;
		}
		else if (_total == 0) {
			progressBar.visible = false;
			message.text = _label;
			countBar.visible = true;
		}
	}

	public function get total():Number{
		return _total;
	}
	
	public function set count(cnt:Number):void
	{
		_count = cnt;
		countLabel.text = String(_count)+_countSuffix;
		if (_total > 0) {
			progressBar.setProgress(cnt, _total);
		}
	}
	
	public function get count():Number
	{
		return _count;
	}

	public function set countSuffix(suffix:String):void {
		_countSuffix = suffix;
	}
	
	



    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___PleaseWait_VBox1_creationComplete(event:mx.events.FlexEvent):void
{
	component_creationComplete(event);
}







}

}
