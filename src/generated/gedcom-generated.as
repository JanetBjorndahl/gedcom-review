
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	
 *	Class: 		gedcom
 *	Source: 	/home/dallan/werelate/gedcom-review/src/gedcom.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2013.08.22 08:43:04 CDT
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.containers.Grid;
import mx.containers.GridItem;
import mx.containers.GridRow;
import mx.containers.HBox;
import mx.containers.VBox;
import mx.controls.Button;
import mx.controls.DataGrid;
import mx.controls.Image;
import mx.controls.Label;
import mx.controls.Spacer;
import mx.controls.TabBar;
import mx.controls.Text;
import mx.controls.dataGridClasses.DataGridColumn;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.events.ItemClickEvent;
import mx.events.ListEvent;
import mx.formatters.NumberFormatter;
import mx.resources.ResourceManager;
import mx.styles.*;
import org.werelate.comps.BeforeCutoffCheckBox;
import org.werelate.comps.ExcludableItemRenderer;
import org.werelate.comps.ExcludeCheckBox;
import org.werelate.comps.LivingCheckBox;
import org.werelate.comps.MatchItemRenderer;
import org.werelate.comps.ReadableItemRenderer;
import org.werelate.comps.WarningItemRenderer;

[ResourceBundle("messages")]


[ResourceBundle("messages")]

[SWF( backgroundColor='9482495')]
[Frame(extraClass="_gedcom_FlexInit")]

[Frame(factoryClass="_gedcom_mx_managers_SystemManager")]



public class gedcom
	extends mx.core.Application
	implements mx.binding.IBindingClient
{

/**
 * @private
 **/
	public var _gedcom_Button3 : mx.controls.Button;

/**
 * @private
 **/
	public var _gedcom_Button5 : mx.controls.Button;

/**
 * @private
 **/
	public var _gedcom_Button6 : mx.controls.Button;

/**
 * @private
 **/
	public var _gedcom_Button7 : mx.controls.Button;

/**
 * @private
 **/
	public var _gedcom_Button8 : mx.controls.Button;

/**
 * @private
 **/
	public var _gedcom_GridItem1 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem10 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem11 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem12 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem13 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem14 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem15 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem16 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem17 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem18 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem19 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem2 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem20 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem21 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem22 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem23 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem24 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem25 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem26 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem27 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem3 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem4 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem5 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem6 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem7 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem8 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_GridItem9 : mx.containers.GridItem;

/**
 * @private
 **/
	public var _gedcom_Label1 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label10 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label11 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label13 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label16 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label19 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label2 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label22 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label25 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label28 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label30 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label4 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label6 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label8 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Label9 : mx.controls.Label;

/**
 * @private
 **/
	public var _gedcom_Text1 : mx.controls.Text;

/**
 * @private
 **/
	public var _gedcom_Text4 : mx.controls.Text;

/**
 * @private
 **/
	public var _gedcom_Text5 : mx.controls.Text;

/**
 * @private
 **/
	public var _gedcom_Text7 : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var containers : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var familiesDataGrid : mx.controls.DataGrid;

	[Bindable]
/**
 * @private
 **/
	public var familiesTab : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var importTab : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var matchesDataGrid : mx.controls.DataGrid;

	[Bindable]
/**
 * @private
 **/
	public var matchesTab : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var overviewTab : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var peopleDataGrid : mx.controls.DataGrid;

	[Bindable]
/**
 * @private
 **/
	public var peopleTab : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var placesDataGrid : mx.controls.DataGrid;

	[Bindable]
/**
 * @private
 **/
	public var placesTab : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var sourcesDataGrid : mx.controls.DataGrid;

	[Bindable]
/**
 * @private
 **/
	public var sourcesTab : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var tabs : mx.controls.TabBar;

	[Bindable]
/**
 * @private
 **/
	public var warningLevelFormatter : mx.formatters.NumberFormatter;

	[Bindable]
/**
 * @private
 **/
	public var warningsDataGrid : mx.controls.DataGrid;

	[Bindable]
/**
 * @private
 **/
	public var warningsTab : mx.containers.Canvas;




private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.HBox
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TabBar
              ,
              id: "tabs"
              ,
              events: {
                itemClick: "__tabs_itemClick"
              }
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Spacer
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.VBox
              ,
              stylesFactory: function():void {
                this.verticalAlign = "middle";
                this.paddingLeft = 0;
                this.paddingRight = 5;
              }
              ,
              propertiesFactory: function():Object { return {
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    events: {
                      click: "___gedcom_Button1_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Help"
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.containers.Canvas
        ,
        id: "containers"
        ,
        stylesFactory: function():void {
          this.backgroundColor = 16777215;
        }
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          percentHeight: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              id: "overviewTab"
              ,
              propertiesFactory: function():Object { return {
                visible: true,
                x: 0,
                y: 0,
                percentWidth: 100.0,
                percentHeight: 100.0,
                horizontalScrollPolicy: "off",
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.VBox
                    ,
                    stylesFactory: function():void {
                      this.paddingBottom = 20;
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      percentHeight: 100.0,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "_gedcom_Label1"
                          ,
                          stylesFactory: function():void {
                            this.paddingTop = 10;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            text: "Next steps:",
                            percentWidth: 100.0
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.HBox
                          ,
                          stylesFactory: function():void {
                            this.paddingLeft = 30;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Image
                                ,
                                stylesFactory: function():void {
                                  this.verticalAlign = "bottom";
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  source: _embed_mxml__images_arrow_r_png_1114845184,
                                  height: 20
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Text
                                ,
                                id: "_gedcom_Text1"
                                ,
                                stylesFactory: function():void {
                                  this.fontSize = 13;
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 700
                                }}
                              })
                            ]
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.HBox
                          ,
                          stylesFactory: function():void {
                            this.paddingLeft = 30;
                            this.paddingTop = 5;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                events: {
                                  click: "___gedcom_Button2_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 170,
                                  label: "Return to WeRelate"
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Text
                                ,
                                stylesFactory: function():void {
                                  this.paddingLeft = 10;
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 650,
                                  htmlText: ResourceManager.getInstance().getString("messages", "returntowerelate")
                                }}
                              })
                            ]
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.HBox
                          ,
                          stylesFactory: function():void {
                            this.paddingLeft = 30;
                            this.paddingTop = 0;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                id: "_gedcom_Button3"
                                ,
                                events: {
                                  click: "___gedcom_Button3_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 170,
                                  label: "Remove this GEDCOM"
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Text
                                ,
                                stylesFactory: function():void {
                                  this.paddingLeft = 10;
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 650,
                                  htmlText: ResourceManager.getInstance().getString("messages", "removegedcom")
                                }}
                              })
                            ]
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "_gedcom_Label2"
                          ,
                          stylesFactory: function():void {
                            this.paddingTop = 10;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            text: "Quality:"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.Grid
                          ,
                          stylesFactory: function():void {
                            this.paddingLeft = 30;
                            this.verticalGap = 3;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 700,
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem1"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "Warning level:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem2"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label4"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem3"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Text
                                            ,
                                            id: "_gedcom_Text4"
                                            ,
                                            stylesFactory: function():void {
                                              this.color = 16711680;
                                            }
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem4"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "Duplicates:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem5"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label6"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem6"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Text
                                            ,
                                            id: "_gedcom_Text5"
                                            ,
                                            stylesFactory: function():void {
                                              this.color = 16711680;
                                            }
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem7"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "Sources:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem8"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label8"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem9"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Text
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: ""
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ]
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "_gedcom_Label9"
                          ,
                          stylesFactory: function():void {
                            this.paddingTop = 10;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            text: "Root:"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "_gedcom_Label10"
                          ,
                          stylesFactory: function():void {
                            this.paddingLeft = 30;
                            this.fontWeight = "bold";
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 700
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "_gedcom_Label11"
                          ,
                          stylesFactory: function():void {
                            this.paddingTop = 10;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            text: "Statistics:",
                            percentWidth: 100.0
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.Grid
                          ,
                          stylesFactory: function():void {
                            this.paddingLeft = 30;
                            this.verticalGap = 3;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 700,
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem10"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "People:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem11"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label13"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem12"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "to be imported / matched / excluded"
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem13"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "Families:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem14"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label16"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem15"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "to be imported / matched / excluded"
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem16"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "Warnings:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem17"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label19"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem18"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "read / unread"
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem19"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "Places:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem20"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label22"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem21"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "matched / not matched"
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem22"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "Sources:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem23"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label25"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem24"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "to be imported / matched / excluded / citation-only"
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.GridRow
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem25"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            stylesFactory: function():void {
                                              this.textAlign = "right";
                                              this.fontWeight = "bold";
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "Family Matches:",
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem26"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            id: "_gedcom_Label28"
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.GridItem
                                      ,
                                      id: "_gedcom_GridItem27"
                                      ,
                                      propertiesFactory: function():Object { return {
                                        percentHeight: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Label
                                            ,
                                            propertiesFactory: function():Object { return {
                                              text: "matched / not matched / undecided"
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ]
                          }}
                        })
                      ]
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              id: "peopleTab"
              ,
              propertiesFactory: function():Object { return {
                visible: false,
                x: 0,
                y: 0,
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.DataGrid
                    ,
                    id: "peopleDataGrid"
                    ,
                    events: {
                      itemRollOver: "__peopleDataGrid_itemRollOver",
                      creationComplete: "__peopleDataGrid_creationComplete",
                      click: "__peopleDataGrid_click",
                      change: "__peopleDataGrid_change"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      horizontalScrollPolicy: "off",
                      verticalScrollPolicy: "auto",
                      percentHeight: 100.0,
                      percentWidth: 100.0,
                      columns: [_gedcom_DataGridColumn1_c(), _gedcom_DataGridColumn2_c(), _gedcom_DataGridColumn3_c(), _gedcom_DataGridColumn4_c(), _gedcom_DataGridColumn5_c(), _gedcom_DataGridColumn6_c(), _gedcom_DataGridColumn7_c(), _gedcom_DataGridColumn8_c(), _gedcom_DataGridColumn9_c()]
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              id: "familiesTab"
              ,
              propertiesFactory: function():Object { return {
                visible: false,
                x: 0,
                y: 0,
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.DataGrid
                    ,
                    id: "familiesDataGrid"
                    ,
                    events: {
                      itemRollOver: "__familiesDataGrid_itemRollOver",
                      creationComplete: "__familiesDataGrid_creationComplete",
                      click: "__familiesDataGrid_click",
                      change: "__familiesDataGrid_change"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      horizontalScrollPolicy: "off",
                      verticalScrollPolicy: "auto",
                      percentHeight: 100.0,
                      percentWidth: 100.0,
                      columns: [_gedcom_DataGridColumn10_c(), _gedcom_DataGridColumn11_c(), _gedcom_DataGridColumn12_c(), _gedcom_DataGridColumn13_c(), _gedcom_DataGridColumn14_c(), _gedcom_DataGridColumn15_c()]
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              id: "warningsTab"
              ,
              propertiesFactory: function():Object { return {
                visible: false,
                x: 0,
                y: 0,
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.VBox
                    ,
                    stylesFactory: function():void {
                      this.paddingTop = 0;
                      this.paddingBottom = 0;
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      percentHeight: 100.0,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.HBox
                          ,
                          stylesFactory: function():void {
                            this.paddingTop = 5;
                            this.paddingBottom = 0;
                            this.paddingRight = 5;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            percentWidth: 100.0,
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Spacer
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                events: {
                                  click: "___gedcom_Button4_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "Print Warnings"
                                }}
                              })
                            ]
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.DataGrid
                          ,
                          id: "warningsDataGrid"
                          ,
                          events: {
                            itemRollOver: "__warningsDataGrid_itemRollOver",
                            creationComplete: "__warningsDataGrid_creationComplete",
                            click: "__warningsDataGrid_click",
                            change: "__warningsDataGrid_change"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            horizontalScrollPolicy: "off",
                            verticalScrollPolicy: "auto",
                            percentHeight: 100.0,
                            percentWidth: 100.0,
                            columns: [_gedcom_DataGridColumn16_c(), _gedcom_DataGridColumn17_c(), _gedcom_DataGridColumn18_c()]
                          }}
                        })
                      ]
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              id: "placesTab"
              ,
              propertiesFactory: function():Object { return {
                visible: false,
                x: 0,
                y: 0,
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.DataGrid
                    ,
                    id: "placesDataGrid"
                    ,
                    events: {
                      itemRollOver: "__placesDataGrid_itemRollOver",
                      creationComplete: "__placesDataGrid_creationComplete",
                      click: "__placesDataGrid_click",
                      change: "__placesDataGrid_change"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      horizontalScrollPolicy: "off",
                      verticalScrollPolicy: "auto",
                      percentHeight: 100.0,
                      percentWidth: 100.0,
                      columns: [_gedcom_DataGridColumn19_c(), _gedcom_DataGridColumn20_c()]
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              id: "sourcesTab"
              ,
              propertiesFactory: function():Object { return {
                visible: false,
                x: 0,
                y: 0,
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.DataGrid
                    ,
                    id: "sourcesDataGrid"
                    ,
                    events: {
                      itemRollOver: "__sourcesDataGrid_itemRollOver",
                      creationComplete: "__sourcesDataGrid_creationComplete",
                      click: "__sourcesDataGrid_click",
                      change: "__sourcesDataGrid_change"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      horizontalScrollPolicy: "off",
                      verticalScrollPolicy: "auto",
                      percentHeight: 100.0,
                      percentWidth: 100.0,
                      columns: [_gedcom_DataGridColumn21_c(), _gedcom_DataGridColumn22_c(), _gedcom_DataGridColumn23_c(), _gedcom_DataGridColumn24_c()]
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              id: "matchesTab"
              ,
              propertiesFactory: function():Object { return {
                visible: false,
                x: 0,
                y: 0,
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.DataGrid
                    ,
                    id: "matchesDataGrid"
                    ,
                    events: {
                      itemRollOver: "__matchesDataGrid_itemRollOver",
                      creationComplete: "__matchesDataGrid_creationComplete",
                      click: "__matchesDataGrid_click",
                      change: "__matchesDataGrid_change"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      horizontalScrollPolicy: "off",
                      verticalScrollPolicy: "auto",
                      percentHeight: 100.0,
                      percentWidth: 100.0,
                      columns: [_gedcom_DataGridColumn25_c(), _gedcom_DataGridColumn26_c(), _gedcom_DataGridColumn27_c(), _gedcom_DataGridColumn28_c(), _gedcom_DataGridColumn29_c(), _gedcom_DataGridColumn30_c()]
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              id: "importTab"
              ,
              propertiesFactory: function():Object { return {
                visible: false,
                x: 0,
                y: 0,
                percentWidth: 100.0,
                percentHeight: 100.0,
                horizontalScrollPolicy: "off",
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.VBox
                    ,
                    stylesFactory: function():void {
                      this.paddingBottom = 10;
                      this.paddingTop = 10;
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "_gedcom_Label30"
                          ,
                          propertiesFactory: function():Object { return {
                            text: "Import your GEDCOM",
                            percentWidth: 100.0
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Spacer
                          ,
                          propertiesFactory: function():Object { return {
                            height: 10
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Text
                          ,
                          id: "_gedcom_Text7"
                          ,
                          stylesFactory: function():void {
                            this.paddingLeft = 30;
                            this.fontSize = 12;
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 700
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Spacer
                          ,
                          propertiesFactory: function():Object { return {
                            height: 10
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.HBox
                          ,
                          propertiesFactory: function():Object { return {
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Spacer
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 30
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                id: "_gedcom_Button5"
                                ,
                                events: {
                                  click: "___gedcom_Button5_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "Ready to import"
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Spacer
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 10
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                id: "_gedcom_Button6"
                                ,
                                events: {
                                  click: "___gedcom_Button6_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "Leave a message"
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Spacer
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 10
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                id: "_gedcom_Button7"
                                ,
                                events: {
                                  click: "___gedcom_Button7_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "Return to user review"
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Spacer
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 10
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                id: "_gedcom_Button8"
                                ,
                                events: {
                                  click: "___gedcom_Button8_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "Put on hold"
                                }}
                              })
                            ]
                          }}
                        })
                      ]
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    /**
     * @private
     **/
	public function gedcom()
	{
		super();

		mx_internal::_document = this;

		//	our style settings
		//	initialize component styles
		if (!this.styleDeclaration)
		{
			this.styleDeclaration = new CSSStyleDeclaration();
		}

		this.styleDeclaration.defaultFactory = function():void
		{
			this.paddingBottom = 0;
			this.paddingLeft = 0;
			this.paddingRight = 0;
			this.paddingTop = 0;
			this.verticalGap = -1;
			this.backgroundColor = 9482495;
		};


		//	ambient styles
		mx_internal::_gedcom_StylesInit();

		//	properties
		this.layout = "vertical";
		this.historyManagementEnabled = false;
		_gedcom_NumberFormatter1_i();

		//	events
		this.addEventListener("preinitialize", ___gedcom_Application1_preinitialize);
		this.addEventListener("creationComplete", ___gedcom_Application1_creationComplete);

	}

    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _gedcom_bindingsSetup();
		var watchers:Array = [];

		var target:gedcom = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_gedcomWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}


		import com.gskinner.StringUtils;
		import mx.events.ResizeEvent;
		import mx.events.ItemClickEvent;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.Container;
		import mx.managers.HistoryManager;
		import org.werelate.model.ModelUtils;
		import mx.controls.dataGridClasses.DataGridColumn;
		import mx.events.DynamicEvent;
		import org.werelate.shared.Utils;
		import mx.logging.ILogger;
		import mx.logging.targets.LineFormattedTarget;
		import xpanel.XPanelTarget;
		import mx.logging.Log;
		import mx.logging.LogEventLevel;
		import mx.logging.ILoggingTarget;
		import org.werelate.ReleaseBeans;
		import org.werelate.TestBeans;
		import org.werelate.model.Model;
		import org.werelate.controllers.MainController;
		import org.werelate.Beans;
		import org.swizframework.Swiz;
		
		[Bindable]
		[Autowire]
		public var model : Model;
		[Bindable]
		[Autowire]
		public var mu : ModelUtils;

		[Bindable]
		private var TABS:ArrayCollection = new ArrayCollection([
			{label:"1. Overview", component:ModelUtils.OVERVIEW},
			{label:"2. People",   component:ModelUtils.PEOPLE},
			{label:"3. Families", component:ModelUtils.FAMILIES},
			{label:"4. Warnings", component:ModelUtils.WARNINGS},
			{label:"5. Places",   component:ModelUtils.PLACES},
			{label:"6. Sources",  component:ModelUtils.SOURCES},
			{label:"7. Family Matches", component:ModelUtils.MATCHES},
//			{label:"8. Updates",  component:ModelUtils.UPDATES},
			{label:"8. Import",   component:ModelUtils.IMPORT},
			]);
			
		private var peopleRollOverIndex:int = 0;
		private var familiesRollOverIndex:int = 0;
		private var sourcesRollOverIndex:int = 0;
		private var placesRollOverIndex:int = 0;
		private var warningsRollOverIndex:int = 0;
		private var matchesRollOverIndex:int = 0;
		private var updatesRollOverIndex:int = 0;
		private var initialData:XML = null;
		private var resized:Boolean = false;
		
		private static const headerFontSize:int = 16;
		private static const statsLabelWidth:int = 140;
		private static const statsNumberWidth:int = 140;
		private static const statsCommentWidth:int = 400;
		
		private static const log:ILogger = Log.getLogger("org.werelate");
		
		private var _mc : MainController;
		public function get mc():MainController {
			return _mc;
		}
		[Autowire(bean="mainController")]
		public function set mc(mc:MainController):void {
			_mc = mc;
			mc.init();
		}

		//
		// initialization functions
		//
		
		private function onPreInit() : void {
			var versionBeans:Class;
         
			CONFIG::test {
				versionBeans = TestBeans;
				
				var testTarget:LineFormattedTarget = new XPanelTarget();
	         testTarget.level = LogEventLevel.ALL;
	         testTarget.includeCategory = true;
//	         testTarget.filters=["org.werelate.*"];
	         Log.addTarget(testTarget);
			}
			CONFIG::release {
				versionBeans = ReleaseBeans;
			}
		 
			Swiz.loadBeans([versionBeans, Beans]);
		}
		
		private function onCreationComplete(): void {
			Alert.buttonWidth=70; // we use 12-pt font
			this.addEventListener(ResizeEvent.RESIZE, onWindowResize);
		}
		
		private function onWindowResize(event:ResizeEvent): void {
			resized = true;
			if (mc) mc.windowResize();
		}
		
		private function createContextMenu(menuSelectFunction: Function, 
														suffix: String,
														fetchGedcomFunction: Function = null,
														fetchWeRelateFunction: Function = null,
														excludeFunction: Function = null,
														unlinkFunction: Function = null,
														markUnreadFunction: Function = null,
														makeRootFunction: Function = null,
														findAddFunction: Function = null,
														findRefsFunction: Function = null
													  ):ContextMenu {
			var cmItems:Array = new Array();
			var cmItem:ContextMenuItem;
			if (makeRootFunction != null) {
				cmItem = new ContextMenuItem(MainController.MAKE_ROOT);
				cmItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, makeRootFunction);
				cmItems.push(cmItem);
			}
			if (findAddFunction != null) {
				cmItem = new ContextMenuItem(MainController.FIND_ADD+" "+suffix);
				cmItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, findAddFunction);
				cmItems.push(cmItem);
			}
			if (fetchGedcomFunction != null) {
				cmItem = new ContextMenuItem(MainController.FETCH_GEDCOM+" "+suffix);
				cmItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, fetchGedcomFunction);
				cmItems.push(cmItem);
			}
			if (fetchWeRelateFunction != null) {
				cmItem = new ContextMenuItem(MainController.FETCH_WERELATE+" "+suffix);
				cmItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, fetchWeRelateFunction);
				cmItems.push(cmItem);
			}
			if (unlinkFunction != null) {
				cmItem = new ContextMenuItem(MainController.UNLINK+" "+suffix);
				cmItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, unlinkFunction);
				cmItems.push(cmItem);
			}
			if (excludeFunction != null) {
				cmItem = new ContextMenuItem(MainController.EXCLUDE+" "+suffix);
				cmItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, excludeFunction);
				cmItems.push(cmItem);
			}
			if (markUnreadFunction != null) {
				cmItem = new ContextMenuItem(MainController.MARK_UNREAD);
				cmItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, markUnreadFunction);
				cmItems.push(cmItem);
			}
			if (findRefsFunction != null) {
				cmItem = new ContextMenuItem(MainController.FIND_REFS+" "+suffix);
				cmItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, findRefsFunction);
				cmItems.push(cmItem);
			}
			var cm:ContextMenu = new ContextMenu();
			cm.hideBuiltInItems();
			cm.customItems = cmItems;
			cm.addEventListener(ContextMenuEvent.MENU_SELECT, menuSelectFunction);
			return cm;
		}
		 
		private function peopleSelectContextMenu(event:ContextMenuEvent):void {
			peopleDataGrid.selectedIndex = peopleRollOverIndex;
			mc.selectedItemUpdated(peopleDataGrid.selectedItem as XML, ModelUtils.PEOPLE);
			mc.selectContextMenu(event.target as ContextMenu, peopleDataGrid.selectedItem as XML, ModelUtils.PEOPLE);
		}
		private function peopleFetchWeRelate(event:ContextMenuEvent):void {
			mc.fetchWeRelateItem(peopleDataGrid.selectedItem as XML);
		}
		private function peopleUnlink(event:ContextMenuEvent):void {
			mc.unlinkItem(peopleDataGrid.selectedItem as XML);
			mc.fetchItem(peopleDataGrid.selectedItem as XML, ModelUtils.PEOPLE);
		}
//		private function peopleMakeRoot(event:ContextMenuEvent):void {
//			mc.makeRoot(peopleDataGrid.selectedItem as XML);
//			mc.fetchItem(peopleDataGrid.selectedItem as XML, ModelUtils.PEOPLE);
//		}
		private function onPeopleDataGridCreationComplete(event:Event): void {
			if (initialData) {
				peopleDataGrid.selectedItem = initialData;
				reposition(peopleDataGrid);
				initialData = null;
			}
			peopleDataGrid.contextMenu = createContextMenu(peopleSelectContextMenu, "person", 
				null, peopleFetchWeRelate, null, peopleUnlink, null, null);
		}
		
		private function familiesSelectContextMenu(event:ContextMenuEvent):void {
			familiesDataGrid.selectedIndex = familiesRollOverIndex;
			mc.selectedItemUpdated(familiesDataGrid.selectedItem as XML, ModelUtils.FAMILIES);
			mc.selectContextMenu(event.target as ContextMenu, familiesDataGrid.selectedItem as XML, ModelUtils.FAMILIES);
		}	
		private function familiesFetchWeRelate(event:ContextMenuEvent):void {
			mc.fetchWeRelateItem(familiesDataGrid.selectedItem as XML);
		}
		private function familiesUnlink(event:ContextMenuEvent):void {
			mc.unlinkItem(familiesDataGrid.selectedItem as XML);
			mc.fetchItem(familiesDataGrid.selectedItem as XML, ModelUtils.FAMILIES);
		}
		private function onFamiliesDataGridCreationComplete(event:Event): void {
			if (initialData) {
				familiesDataGrid.selectedItem = initialData;
				reposition(familiesDataGrid);
				initialData = null;
			}
			familiesDataGrid.contextMenu = createContextMenu(familiesSelectContextMenu, "family",
				null, familiesFetchWeRelate, null, familiesUnlink);			
		}
			
		private function warningsSelectContextMenu(event:ContextMenuEvent):void {
			warningsDataGrid.selectedIndex = warningsRollOverIndex;
			mc.selectedItemUpdated(warningsDataGrid.selectedItem as XML, ModelUtils.WARNINGS);
			mc.selectContextMenu(event.target as ContextMenu, warningsDataGrid.selectedItem as XML, ModelUtils.WARNINGS);
		}	
//		private function warningsExclude(event:ContextMenuEvent):void {
//			mc.toggleExclude(warningsDataGrid.selectedItem as XML);
//		}
		private function warningsMarkUnread(event:ContextMenuEvent):void {
			mc.markUnread(warningsDataGrid.selectedItem as XML, ModelUtils.WARNINGS);
		}	
		private function onWarningsDataGridCreationComplete(event:Event): void {
			if (initialData) {
				warningsDataGrid.selectedItem = initialData;
				reposition(warningsDataGrid);
				initialData = null;
			}
			warningsDataGrid.contextMenu = createContextMenu(warningsSelectContextMenu, "page", 
				null, null, null, null, warningsMarkUnread);
		}
		
		private function placesSelectContextMenu(event:ContextMenuEvent):void {
			placesDataGrid.selectedIndex = placesRollOverIndex;
			mc.selectedItemUpdated(placesDataGrid.selectedItem as XML, ModelUtils.PLACES);
			mc.selectContextMenu(event.target as ContextMenu, placesDataGrid.selectedItem as XML, ModelUtils.PLACES);
		}	
		private function placesUnlink(event:ContextMenuEvent):void {
			mc.unlinkItem(placesDataGrid.selectedItem as XML);
			mc.fetchItem(placesDataGrid.selectedItem as XML, ModelUtils.PLACES);
		}
		private function placesMarkUnread(event:ContextMenuEvent):void {
			mc.markUnread(placesDataGrid.selectedItem as XML, ModelUtils.PLACES);
		}
		private function placesFindAdd(event:ContextMenuEvent):void {
			mc.findAddItem(placesDataGrid.selectedItem as XML, ModelUtils.PLACES);
		}	
		private function placesFindRefs(event:ContextMenuEvent):void {
			mc.findRefs(placesDataGrid.selectedItem as XML);
		}	
		private function onPlacesDataGridCreationComplete(event:Event): void {
			if (initialData) {
				placesDataGrid.selectedItem = initialData;
				reposition(placesDataGrid);
				initialData = null;
			}
			placesDataGrid.contextMenu = createContextMenu(placesSelectContextMenu, "place", 
				null, null, null, placesUnlink, placesMarkUnread, null, placesFindAdd, placesFindRefs);			
		}
		
		private function sourcesSelectContextMenu(event:ContextMenuEvent):void {
			sourcesDataGrid.selectedIndex = sourcesRollOverIndex;
			mc.selectedItemUpdated(sourcesDataGrid.selectedItem as XML, ModelUtils.SOURCES);
			mc.selectContextMenu(event.target as ContextMenu, sourcesDataGrid.selectedItem as XML, ModelUtils.SOURCES);
		}	
		private function sourcesFetchGedcom(event:ContextMenuEvent):void {
			mc.fetchGedcomItem(sourcesDataGrid.selectedItem as XML);
		}
		private function sourcesUnlink(event:ContextMenuEvent):void {
			mc.unlinkItem(sourcesDataGrid.selectedItem as XML);
			mc.fetchItem(sourcesDataGrid.selectedItem as XML, ModelUtils.SOURCES);
		}	
		private function sourcesMarkUnread(event:ContextMenuEvent):void {
			mc.markUnread(sourcesDataGrid.selectedItem as XML, ModelUtils.SOURCES);
		}	
		private function sourcesFindAdd(event:ContextMenuEvent):void {
			mc.findAddItem(sourcesDataGrid.selectedItem as XML, ModelUtils.SOURCES);
		}	
		private function sourcesFindRefs(event:ContextMenuEvent):void {
			mc.findRefs(sourcesDataGrid.selectedItem as XML);
		}	
		private function onSourcesDataGridCreationComplete(event:Event): void {
			if (initialData) {
				sourcesDataGrid.selectedItem = initialData;
				reposition(sourcesDataGrid);
				initialData = null;
			}
			sourcesDataGrid.contextMenu = createContextMenu(sourcesSelectContextMenu, "source", 
				sourcesFetchGedcom, null, null, sourcesUnlink, sourcesMarkUnread, null, sourcesFindAdd, sourcesFindRefs);
		}
		
		private function matchesSelectContextMenu(event:ContextMenuEvent):void {
			matchesDataGrid.selectedIndex = matchesRollOverIndex;
			mc.selectedItemUpdated(matchesDataGrid.selectedItem as XML, ModelUtils.MATCHES);
			mc.selectContextMenu(event.target as ContextMenu, matchesDataGrid.selectedItem as XML, ModelUtils.MATCHES);
		}	
		private function matchesFetchGedcom(event:ContextMenuEvent):void {
			mc.fetchGedcomItem(matchesDataGrid.selectedItem as XML);
		}
		private function matchesFetchWeRelate(event:ContextMenuEvent):void {
			mc.fetchWeRelateItem(matchesDataGrid.selectedItem as XML);
		}
		private function matchesExclude(event:ContextMenuEvent):void {
			mc.toggleExclude(matchesDataGrid.selectedItem as XML);
		}
		private function matchesUnlink(event:ContextMenuEvent):void {
			mc.unlinkItem(matchesDataGrid.selectedItem as XML);
			mc.fetchItem(matchesDataGrid.selectedItem as XML, ModelUtils.MATCHES);
		}
		private function matchesMarkUnread(event:ContextMenuEvent):void {
			mc.markUnread(matchesDataGrid.selectedItem as XML, ModelUtils.MATCHES);
		}	
		private function onMatchesDataGridCreationComplete(event:Event): void {
			if (initialData) {
				matchesDataGrid.selectedItem = initialData;
				reposition(matchesDataGrid);
				initialData = null;
			}
			matchesDataGrid.contextMenu = createContextMenu(matchesSelectContextMenu, "family", 
				matchesFetchGedcom, matchesFetchWeRelate, matchesExclude, matchesUnlink, matchesMarkUnread);			
		}
		
//		private function updatesSelectContextMenu(event:ContextMenuEvent):void {
//			updatesDataGrid.selectedIndex = updatesRollOverIndex;
//			mc.selectedItemUpdated(updatesDataGrid.selectedItem as XML, ModelUtils.UPDATES);
//			mc.selectContextMenu(event.target as ContextMenu, updatesDataGrid.selectedItem as XML, ModelUtils.UPDATES);
//		}
//		private function updatesFetchGedcom(event:ContextMenuEvent):void {
//			mc.fetchGedcomItem(updatesDataGrid.selectedItem as XML);
//		}
//		private function updatesFetchWeRelate(event:ContextMenuEvent):void {
//			mc.fetchWeRelateItem(updatesDataGrid.selectedItem as XML);
//		}
//		private function updatesUnlink(event:ContextMenuEvent):void {
//			mc.unlinkItem(updatesDataGrid.selectedItem as XML);
//			mc.fetchItem(updatesDataGrid.selectedItem as XML, ModelUtils.UPDATES);
//		}
//		private function updatesMarkUnread(event:ContextMenuEvent):void {
//			mc.markUnread(updatesDataGrid.selectedItem as XML, ModelUtils.UPDATES);
//		}
//		private function onUpdatesDataGridCreationComplete(event:Event): void {
//			if (initialData) {
//				updatesDataGrid.selectedItem = initialData;
//				reposition(updatesDataGrid);
//				initialData = null;
//			}
//			updatesDataGrid.contextMenu = createContextMenu(updatesSelectContextMenu, "page",
//				updatesFetchGedcom, updatesFetchWeRelate, null, updatesUnlink, updatesMarkUnread);
//		}
		
		//
		// display functions
		//
	
		private function getPersonName(person:XML, column:DataGridColumn):String {
			return mu.getPersonFullName(person);
		}
		
		private function getPersonBirthDate(person:XML, column:DataGridColumn):String {
			return person.@living == 'true' ? "living" : person.event_fact.(@type=='Birth').@date;
		}
		
		private function getPersonDeathDate(person:XML, column:DataGridColumn):String {
			return person.@living == 'true' ? "living" : person.event_fact.(@type=='Death').@date;
		}
		
		private function getFamilyHusbandName(family:XML, column:DataGridColumn):String {
			return mu.getFullName(family.husband[0]);
		}
		
		private function getFamilyWifeName(family:XML, column:DataGridColumn):String {
			return mu.getFullName(family.wife[0]);
		}
		
		private function getFamilyMarriageDate(family:XML, column:DataGridColumn):String {
			return family.@living == 'true' ? "living" : family.event_fact.(@type=='Marriage').@date;
		}
		
		private function getPlaceName(place:XML, column:DataGridColumn):String {
			return place.@text;
		}
		
		private function getSourceName(source:XML, column:DataGridColumn):String {
			return mu.getMySourceName(source, null);
		}
		
		private function getSourceAuthor(source:XML, column:DataGridColumn):String {
			return source.author.toString();
		}

		private function getWarningPersonFamilyName(warn:XML, column:DataGridColumn):String {
         return mu.getPersonFamilyName(mu.getWarningPersonFamily(warn));
		}

      private function getWarningLevel(warn:XML, column:DataGridColumn):String {
         return mu.getWarningLevelDesc(warn);
      }
		
		private function getMatchDate(pf:XML, column:DataGridColumn):String {
			if (pf.localName() == "person") {
				return getPersonBirthDate(pf, column);
			}
			else {
				return getFamilyMarriageDate(pf, column);
			}
		}
		
      private function getDistance(pf:XML, column:DataGridColumn):String {
         if (pf.@distance == ModelUtils.NOT_CONNECTED) {
            return "Not connected to root";
         }
         else {
            return Math.ceil(pf.@distance / 2).toString();
         }
      }

      private function getWarningDistance(warning:XML, column:DataGridColumn):String {
         return getDistance(mu.getWarningPersonFamily(warning), column);
      }

		private function sortName(o1:Object, o2:Object):int {
			if (o1.@stdName.toString() < o2.@stdName.toString()) return -1;
			else if (o1.@stdName.toString() > o2.@stdName.toString()) return 1;
			else if (o1.@id.toString() < o2.@id.toString()) return -1;
			else if (o1.@id.toString() > o2.@id.toString()) return 1;
			else return 0;
		}
      private function sortWarningName(o1:XML, o2:XML):int {
         return sortName(mu.getWarningPersonFamily(o1), mu.getWarningPersonFamily(o2));
      }
		private function sortHusbandName(o1:Object, o2:Object):int {
			if (o1.@stdHusbandName.toString() < o2.@stdHusbandName.toString()) return -1;
			else if (o1.@stdHusbandName.toString() > o2.@stdHusbandName.toString()) return 1;
			else return sortName(o1, o2);
		} 
		private function sortWifeName(o1:Object, o2:Object):int {
			if (o1.@stdWifeName.toString() < o2.@stdWifeName.toString()) return -1;
			else if (o1.@stdWifeName.toString() > o2.@stdWifeName.toString()) return 1;
			else return sortName(o1, o2);
		} 
      private function sortDistance(o1:Object, o2:Object):int {
         var n1:Number = Number(o1.@distance);
         var n2:Number = Number(o2.@distance);
         if (n1 < n2) return -1;
         else if (n1 > n2) return 1;
         else return sortName(o1, o2);
      }
      private function sortWarningDistance(o1:XML, o2:XML):int {
         return sortDistance(mu.getWarningPersonFamily(o1), mu.getWarningPersonFamily(o2));
      } 
		private function sortDate(o1:Object, o2:Object):int {
			if (o1.@stdDate.toString() < o2.@stdDate.toString()) return -1;
			else if (o1.@stdDate.toString() > o2.@stdDate.toString()) return 1;
			else return sortName(o1, o2);
		} 
		private function sortDeathDate(o1:Object, o2:Object):int {
			if (o1.@stdDeathDate.toString() < o2.@stdDeathDate.toString()) return -1;
			else if (o1.@stdDeathDate.toString() > o2.@stdDeathDate.toString()) return 1;
			else return sortName(o1, o2);
		} 
		private function sortMatch(o1:Object, o2:Object):int {
			if (o1.@stdMatch.toString() < o2.@stdMatch.toString()) return -1;
			else if (o1.@stdMatch.toString() > o2.@stdMatch.toString()) return 1;
			else return sortName(o1, o2);
		} 
      private function sortWarning(o1:XML, o2:XML):int {
         if (o1.@warning.toString() < o2.@warning.toString()) return -1;
         else if (o1.@warning.toString() > o2.@warning.toString()) return 1;
         else return sortName(mu.getWarningPersonFamily(o1), mu.getWarningPersonFamily(o2));
      }
      private function sortWarningLevel(o1:XML, o2:XML):int {
         if (o1.@warningLevel.toString() < o2.@warningLevel.toString()) return -1;
         else if (o1.@warningLevel.toString() > o2.@warningLevel.toString()) return 1;
         else return sortWarning(o1, o2);
      }
		private function sortAuthor(o1:Object, o2:Object):int {
			if (o1.@stdAuthor.toString() < o2.@stdAuthor.toString()) return -1;
			else if (o1.@stdAuthor.toString() > o2.@stdAuthor.toString()) return 1;
			else return sortName(o1, o2);
		} 
		private function sortMerged(o1:Object, o2:Object):int {
			if (o1.@merged == 'true' && o2.@merged != 'true') return -1;
			else if (o1.@merged != 'true' && o2.@merged == 'true') return 1;
			else return sortName(o1, o2);
		}
		private function sortEdited(o1:Object, o2:Object):int {
			if (o1.@edited == 'true' && o2.@edited != 'true') return -1;
			else if (o1.@edited != 'true' && o2.@edited == 'true') return 1;
			else return sortName(o1, o2);
		}
		private function sortExclude(o1:Object, o2:Object):int {
			if (o1.@exclude == 'true' && o2.@exclude != 'true') return -1;
			else if (o1.@exclude != 'true' && o2.@exclude == 'true') return 1;
			else return sortName(o1, o2);
		}
      private function sortLiving(o1:Object, o2:Object):int {
         if (o1.@living == 'true' && o2.@living != 'true') return -1;
         else if (o1.@living != 'true' && o2.@living == 'true') return 1;
         else return sortName(o1, o2);
      }
      private function sortBeforeCutoff(o1:Object, o2:Object):int {
         if (o1.@beforeCutoff == 'true' && o2.@beforeCutoff != 'true') return -1;
         else if (o1.@beforeCutoff != 'true' && o2.@beforeCutoff == 'true') return 1;
         else return sortName(o1, o2);
      }

		private function getMatch(pg:XML, column:DataGridColumn):String {
			return pg.@match;
		}
		
		private function getFamilyMatch(pg:XML, column:DataGridColumn):String {
			return pg.@nomatch == 'true' ? '(not a match)' : pg.@match;
		}
		
		private function getEdited(pf:XML, column:DataGridColumn):String {
			if (pf.@edited.toString().length > 0) {
				return pf.@edited == 'true' ? 'Yes' : '';
			}
			else {
				return '';
			}
		}
		
		private function getMerged(pf:XML, column:DataGridColumn):String {
			if (pf.@match.toString().length > 0) {
				return pf.@merged == 'true' ? 'Yes' : '';
			}
			else {
				return '';
			}
		}
		
		private function distanceDataTip(data:XML):String {
			return "Distance from the root of the tree";			
		}
		
		//
		// update functions
		//

		public function onTabClick(event:ItemClickEvent):void {
			var component:int = TABS[event.index].component;
			var data:XML = null;
			if (component == ModelUtils.PEOPLE) {
				data = peopleDataGrid.selectedItem as XML;
			}
			else if (component == ModelUtils.FAMILIES) {
				data = familiesDataGrid.selectedItem as XML;
			}
			else if (component == ModelUtils.WARNINGS) {
				data = warningsDataGrid.selectedItem as XML;
			}
			else if (component == ModelUtils.PLACES) {
				data = placesDataGrid.selectedItem as XML;
			}
			else if (component == ModelUtils.SOURCES) {
				data = sourcesDataGrid.selectedItem as XML;
			}
			else if (component == ModelUtils.MATCHES) {
				data = matchesDataGrid.selectedItem as XML;
			}
//			else if (component == ModelUtils.UPDATES) {
//				data = updatesDataGrid.selectedItem as XML;
//			}

			log.info("onTabChange component={0}", component);
			setSelectedItem(data, component);
			mc.selectedItemUpdated(data, component);
			mc.fetchItem(data, component);
		}
		
		private function setSelectedTab(component:int):void {
			for (var i:int = 0; i < TABS.length; i++) {
				if (TABS[i].component == component) {
					tabs.selectedIndex = i;
					break;
				}
			}

         // update the stats before each tab switch
//			if (component == ModelUtils.OVERVIEW || component == ModelUtils.IMPORT || component == ModelUtils.MATCHES) {
				mc.updateStats();
//			}
			
			overviewTab.visible = (component == ModelUtils.OVERVIEW);
			peopleTab.visible = (component == ModelUtils.PEOPLE);
			familiesTab.visible = (component == ModelUtils.FAMILIES);
			warningsTab.visible = (component == ModelUtils.WARNINGS);
			placesTab.visible = (component == ModelUtils.PLACES);
			sourcesTab.visible = (component == ModelUtils.SOURCES);
			matchesTab.visible = (component == ModelUtils.MATCHES);
//			updatesTab.visible = (component == ModelUtils.UPDATES);
			importTab.visible = (component == ModelUtils.IMPORT);
		}
		
		public function reposition(dg:DataGrid):void {
			var rowCount:int = resized ? 0 : dg.rowCount;
			resized = false;
			dg.verticalScrollPosition = Math.max(0, Math.min(dg.selectedIndex - Math.floor(rowCount/2), 
																			 dg.maxVerticalScrollPosition));
		}
		
		[Mediate(event="gedcom:setSelectedItem", properties="data, component")]		
		public function setSelectedItem(data:XML, component:int):void {
			log.info("setSelectedItem tab={0} item={1}", component, data ? data.@id : 'null');
			if (component == ModelUtils.PEOPLE) {
				if (peopleDataGrid == null) {
					initialData = data;
				}
				else {
					peopleDataGrid.selectedItem = data;
					reposition(peopleDataGrid);
				}
			}
			else if (component == ModelUtils.FAMILIES) {
				if (familiesDataGrid == null) {
					initialData = data;
				}
				else {
					familiesDataGrid.selectedItem = data;
					reposition(familiesDataGrid);
				}
			}
			else if (component == ModelUtils.SOURCES) {
				if (sourcesDataGrid == null) {
					initialData = data;
				}
				else {
					sourcesDataGrid.selectedItem = data;
					reposition(sourcesDataGrid);
				}
			}
			else if (component == ModelUtils.PLACES) {
				if (placesDataGrid == null) {
					initialData = data;
				}
				else {
					placesDataGrid.selectedItem = data;
					reposition(placesDataGrid);
				}
			}
			else if (component == ModelUtils.WARNINGS) {
				if (warningsDataGrid == null) {
					initialData = data;
				}
				else {
					warningsDataGrid.selectedItem = data;
					reposition(warningsDataGrid);
				}
			}
			else if (component == ModelUtils.MATCHES) {
				if (matchesDataGrid == null) {
					initialData = data;
				}
				else {
					matchesDataGrid.selectedItem = data;
					reposition(matchesDataGrid);
				}
			}
//			else if (component == ModelUtils.UPDATES) {
//				if (updatesDataGrid == null) {
//					initialData = data;
//				}
//				else {
//					updatesDataGrid.selectedItem = data;
//					reposition(updatesDataGrid);
//				}
//			}
			
			setSelectedTab(component);
		}
		
		private function onClickHelp():void {
			var component:int = TABS[tabs.selectedIndex].component;
			mc.loadPageTitle(ModelUtils.HELPPAGES[component], null, true);
		}
		
		private function onClick(data:Object, component:int):void {
			log.info("onClick");
			mc.selectedItemUpdated(data as XML, component);
			mc.fetchItem(data as XML, component);
		}
		
		private function onChange(data:Object, component:int, selectedItemUpdated:Boolean):void {
			log.info("onChange data={0} component={1}",
							(data == null ? "null" : data.@id), component);
			if (selectedItemUpdated) {
				mc.selectedItemUpdated(data as XML, component);
				mc.fetchItem(data as XML, component);
			}
		}

      private function onClickPrintWarnings():void {
         //mc.printWarnings(this, warningsDataGrid);
         ExternalInterface.call("loadContentNewWindow", "/gedcom/warnings.html");
      }
		
	



    //	supporting function definitions for properties, events, styles, effects
private function _gedcom_NumberFormatter1_i() : mx.formatters.NumberFormatter
{
	var temp : mx.formatters.NumberFormatter = new mx.formatters.NumberFormatter();
	warningLevelFormatter = temp;
	temp.precision = 1;
	temp.rounding = "down";
	temp.decimalSeparatorTo = ".";
	return temp;
}

/**
 * @private
 **/
public function ___gedcom_Application1_preinitialize(event:mx.events.FlexEvent):void
{
	onPreInit()
}

/**
 * @private
 **/
public function ___gedcom_Application1_creationComplete(event:mx.events.FlexEvent):void
{
	onCreationComplete()
}

/**
 * @private
 **/
public function __tabs_itemClick(event:mx.events.ItemClickEvent):void
{
	onTabClick(event)
}

/**
 * @private
 **/
public function ___gedcom_Button1_click(event:flash.events.MouseEvent):void
{
	onClickHelp()
}

/**
 * @private
 **/
public function ___gedcom_Button2_click(event:flash.events.MouseEvent):void
{
	mc.returnToWeRelate()
}

/**
 * @private
 **/
public function ___gedcom_Button3_click(event:flash.events.MouseEvent):void
{
	mc.removeGedcom()
}

private function _gedcom_DataGridColumn1_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Exclude";
	temp.width = 5;
	temp.sortCompareFunction = sortExclude;
	temp.itemRenderer = _gedcom_ClassFactory1_c();
	return temp;
}

private function _gedcom_ClassFactory1_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludeCheckBox;
	return temp;
}

private function _gedcom_DataGridColumn2_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Name";
	temp.width = 20;
	temp.labelFunction = getPersonName;
	temp.dataField = "@stdName";
	temp.sortCompareFunction = sortName;
	temp.itemRenderer = _gedcom_ClassFactory2_c();
	return temp;
}

private function _gedcom_ClassFactory2_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn3_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Gender";
	temp.width = 5;
	temp.dataField = "gender";
	temp.itemRenderer = _gedcom_ClassFactory3_c();
	return temp;
}

private function _gedcom_ClassFactory3_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn4_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Birth";
	temp.width = 12;
	temp.labelFunction = getPersonBirthDate;
	temp.sortCompareFunction = sortDate;
	temp.itemRenderer = _gedcom_ClassFactory4_c();
	return temp;
}

private function _gedcom_ClassFactory4_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn5_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Death";
	temp.width = 12;
	temp.labelFunction = getPersonDeathDate;
	temp.sortCompareFunction = sortDeathDate;
	temp.itemRenderer = _gedcom_ClassFactory5_c();
	return temp;
}

private function _gedcom_ClassFactory5_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn6_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Distance";
	temp.width = 5;
	temp.dataTipFunction = distanceDataTip;
	temp.showDataTips = true;
	temp.labelFunction = getDistance;
	temp.sortCompareFunction = sortDistance;
	temp.itemRenderer = _gedcom_ClassFactory6_c();
	return temp;
}

private function _gedcom_ClassFactory6_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn7_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Living";
	temp.width = 5;
	temp.sortCompareFunction = sortLiving;
	temp.itemRenderer = _gedcom_ClassFactory7_c();
	return temp;
}

private function _gedcom_ClassFactory7_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.LivingCheckBox;
	return temp;
}

private function _gedcom_DataGridColumn8_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Early";
	temp.width = 5;
	temp.sortCompareFunction = sortBeforeCutoff;
	temp.itemRenderer = _gedcom_ClassFactory8_c();
	return temp;
}

private function _gedcom_ClassFactory8_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.BeforeCutoffCheckBox;
	return temp;
}

private function _gedcom_DataGridColumn9_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Matched Page";
	temp.width = 16;
	temp.labelFunction = getMatch;
	temp.sortCompareFunction = sortMatch;
	temp.itemRenderer = _gedcom_ClassFactory9_c();
	return temp;
}

private function _gedcom_ClassFactory9_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

/**
 * @private
 **/
public function __peopleDataGrid_itemRollOver(event:mx.events.ListEvent):void
{
	peopleRollOverIndex = event.rowIndex
}

/**
 * @private
 **/
public function __peopleDataGrid_creationComplete(event:mx.events.FlexEvent):void
{
	onPeopleDataGridCreationComplete(event)
}

/**
 * @private
 **/
public function __peopleDataGrid_click(event:flash.events.MouseEvent):void
{
	onClick(peopleDataGrid.selectedItem, ModelUtils.PEOPLE)
}

/**
 * @private
 **/
public function __peopleDataGrid_change(event:mx.events.ListEvent):void
{
	onChange(peopleDataGrid.selectedItem, ModelUtils.PEOPLE, peopleDataGrid.selectedIndex != peopleRollOverIndex)
}

private function _gedcom_DataGridColumn10_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Exclude";
	temp.width = 5;
	temp.sortCompareFunction = sortExclude;
	temp.itemRenderer = _gedcom_ClassFactory10_c();
	return temp;
}

private function _gedcom_ClassFactory10_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludeCheckBox;
	return temp;
}

private function _gedcom_DataGridColumn11_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Husband";
	temp.width = 25;
	temp.labelFunction = getFamilyHusbandName;
	temp.dataField = "@stdHusbandName";
	temp.sortCompareFunction = sortHusbandName;
	temp.itemRenderer = _gedcom_ClassFactory11_c();
	return temp;
}

private function _gedcom_ClassFactory11_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn12_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Wife";
	temp.width = 25;
	temp.labelFunction = getFamilyWifeName;
	temp.dataField = "@stdWifeName";
	temp.sortCompareFunction = sortWifeName;
	temp.itemRenderer = _gedcom_ClassFactory12_c();
	return temp;
}

private function _gedcom_ClassFactory12_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn13_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Marriage";
	temp.width = 15;
	temp.labelFunction = getFamilyMarriageDate;
	temp.sortCompareFunction = sortDate;
	temp.itemRenderer = _gedcom_ClassFactory13_c();
	return temp;
}

private function _gedcom_ClassFactory13_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn14_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Distance";
	temp.width = 5;
	temp.dataTipFunction = distanceDataTip;
	temp.showDataTips = true;
	temp.labelFunction = getDistance;
	temp.sortCompareFunction = sortDistance;
	temp.itemRenderer = _gedcom_ClassFactory14_c();
	return temp;
}

private function _gedcom_ClassFactory14_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn15_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Matched Page";
	temp.width = 20;
	temp.labelFunction = getMatch;
	temp.sortCompareFunction = sortMatch;
	temp.itemRenderer = _gedcom_ClassFactory15_c();
	return temp;
}

private function _gedcom_ClassFactory15_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludableItemRenderer;
	return temp;
}

/**
 * @private
 **/
public function __familiesDataGrid_itemRollOver(event:mx.events.ListEvent):void
{
	familiesRollOverIndex = event.rowIndex
}

/**
 * @private
 **/
public function __familiesDataGrid_creationComplete(event:mx.events.FlexEvent):void
{
	onFamiliesDataGridCreationComplete(event)
}

/**
 * @private
 **/
public function __familiesDataGrid_click(event:flash.events.MouseEvent):void
{
	onClick(familiesDataGrid.selectedItem, ModelUtils.FAMILIES)
}

/**
 * @private
 **/
public function __familiesDataGrid_change(event:mx.events.ListEvent):void
{
	onChange(familiesDataGrid.selectedItem, ModelUtils.FAMILIES, familiesDataGrid.selectedIndex != familiesRollOverIndex)
}

/**
 * @private
 **/
public function ___gedcom_Button4_click(event:flash.events.MouseEvent):void
{
	onClickPrintWarnings()
}

private function _gedcom_DataGridColumn16_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Person/Family";
	temp.width = 30;
	temp.labelFunction = getWarningPersonFamilyName;
	temp.dataField = "@stdName";
	temp.sortCompareFunction = sortWarningName;
	temp.itemRenderer = _gedcom_ClassFactory16_c();
	return temp;
}

private function _gedcom_ClassFactory16_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.WarningItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn17_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Description";
	temp.width = 45;
	temp.dataField = "@warning";
	temp.sortCompareFunction = sortWarning;
	temp.dataTipField = "@warning";
	temp.showDataTips = true;
	temp.itemRenderer = _gedcom_ClassFactory17_c();
	return temp;
}

private function _gedcom_ClassFactory17_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.WarningItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn18_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Level";
	temp.width = 5;
	temp.labelFunction = getWarningLevel;
	temp.dataField = "@warningLevel";
	temp.sortCompareFunction = sortWarningLevel;
	temp.itemRenderer = _gedcom_ClassFactory18_c();
	return temp;
}

private function _gedcom_ClassFactory18_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.WarningItemRenderer;
	return temp;
}

/**
 * @private
 **/
public function __warningsDataGrid_itemRollOver(event:mx.events.ListEvent):void
{
	warningsRollOverIndex = event.rowIndex
}

/**
 * @private
 **/
public function __warningsDataGrid_creationComplete(event:mx.events.FlexEvent):void
{
	onWarningsDataGridCreationComplete(event)
}

/**
 * @private
 **/
public function __warningsDataGrid_click(event:flash.events.MouseEvent):void
{
	onClick(warningsDataGrid.selectedItem, ModelUtils.WARNINGS)
}

/**
 * @private
 **/
public function __warningsDataGrid_change(event:mx.events.ListEvent):void
{
	onChange(warningsDataGrid.selectedItem, ModelUtils.WARNINGS, warningsDataGrid.selectedIndex != warningsRollOverIndex)
}

private function _gedcom_DataGridColumn19_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Place";
	temp.width = 30;
	temp.labelFunction = getPlaceName;
	temp.dataField = "@stdName";
	temp.sortCompareFunction = sortName;
	temp.itemRenderer = _gedcom_ClassFactory19_c();
	return temp;
}

private function _gedcom_ClassFactory19_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ReadableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn20_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Matched Page";
	temp.width = 20;
	temp.labelFunction = getMatch;
	temp.sortCompareFunction = sortMatch;
	temp.itemRenderer = _gedcom_ClassFactory20_c();
	return temp;
}

private function _gedcom_ClassFactory20_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ReadableItemRenderer;
	return temp;
}

/**
 * @private
 **/
public function __placesDataGrid_itemRollOver(event:mx.events.ListEvent):void
{
	placesRollOverIndex = event.rowIndex
}

/**
 * @private
 **/
public function __placesDataGrid_creationComplete(event:mx.events.FlexEvent):void
{
	onPlacesDataGridCreationComplete(event)
}

/**
 * @private
 **/
public function __placesDataGrid_click(event:flash.events.MouseEvent):void
{
	onClick(placesDataGrid.selectedItem, ModelUtils.PLACES)
}

/**
 * @private
 **/
public function __placesDataGrid_change(event:mx.events.ListEvent):void
{
	onChange(placesDataGrid.selectedItem, ModelUtils.PLACES, placesDataGrid.selectedIndex != placesRollOverIndex)
}

private function _gedcom_DataGridColumn21_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Exclude";
	temp.width = 5;
	temp.sortCompareFunction = sortExclude;
	temp.itemRenderer = _gedcom_ClassFactory21_c();
	return temp;
}

private function _gedcom_ClassFactory21_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ExcludeCheckBox;
	return temp;
}

private function _gedcom_DataGridColumn22_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Title";
	temp.width = 30;
	temp.labelFunction = getSourceName;
	temp.dataField = "@stdName";
	temp.sortCompareFunction = sortName;
	temp.itemRenderer = _gedcom_ClassFactory22_c();
	return temp;
}

private function _gedcom_ClassFactory22_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ReadableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn23_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Author";
	temp.width = 30;
	temp.labelFunction = getSourceAuthor;
	temp.sortCompareFunction = sortAuthor;
	temp.itemRenderer = _gedcom_ClassFactory23_c();
	return temp;
}

private function _gedcom_ClassFactory23_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ReadableItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn24_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Matched Page";
	temp.width = 20;
	temp.labelFunction = getMatch;
	temp.sortCompareFunction = sortMatch;
	temp.itemRenderer = _gedcom_ClassFactory24_c();
	return temp;
}

private function _gedcom_ClassFactory24_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.ReadableItemRenderer;
	return temp;
}

/**
 * @private
 **/
public function __sourcesDataGrid_itemRollOver(event:mx.events.ListEvent):void
{
	sourcesRollOverIndex = event.rowIndex
}

/**
 * @private
 **/
public function __sourcesDataGrid_creationComplete(event:mx.events.FlexEvent):void
{
	onSourcesDataGridCreationComplete(event)
}

/**
 * @private
 **/
public function __sourcesDataGrid_click(event:flash.events.MouseEvent):void
{
	onClick(sourcesDataGrid.selectedItem, ModelUtils.SOURCES)
}

/**
 * @private
 **/
public function __sourcesDataGrid_change(event:mx.events.ListEvent):void
{
	onChange(sourcesDataGrid.selectedItem, ModelUtils.SOURCES, sourcesDataGrid.selectedIndex != sourcesRollOverIndex)
}

private function _gedcom_DataGridColumn25_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Husband";
	temp.width = 25;
	temp.labelFunction = getFamilyHusbandName;
	temp.dataField = "@stdHusbandName";
	temp.sortCompareFunction = sortHusbandName;
	temp.itemRenderer = _gedcom_ClassFactory25_c();
	return temp;
}

private function _gedcom_ClassFactory25_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.MatchItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn26_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Wife";
	temp.width = 25;
	temp.labelFunction = getFamilyWifeName;
	temp.dataField = "@stdWifeName";
	temp.sortCompareFunction = sortWifeName;
	temp.itemRenderer = _gedcom_ClassFactory26_c();
	return temp;
}

private function _gedcom_ClassFactory26_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.MatchItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn27_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Marriage";
	temp.width = 15;
	temp.labelFunction = getFamilyMarriageDate;
	temp.sortCompareFunction = sortDate;
	temp.itemRenderer = _gedcom_ClassFactory27_c();
	return temp;
}

private function _gedcom_ClassFactory27_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.MatchItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn28_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Distance";
	temp.width = 10;
	temp.dataTipFunction = distanceDataTip;
	temp.showDataTips = true;
	temp.labelFunction = getDistance;
	temp.sortCompareFunction = sortDistance;
	temp.itemRenderer = _gedcom_ClassFactory28_c();
	return temp;
}

private function _gedcom_ClassFactory28_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.MatchItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn29_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Matched Page";
	temp.width = 30;
	temp.labelFunction = getFamilyMatch;
	temp.sortCompareFunction = sortMatch;
	temp.itemRenderer = _gedcom_ClassFactory29_c();
	return temp;
}

private function _gedcom_ClassFactory29_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.MatchItemRenderer;
	return temp;
}

private function _gedcom_DataGridColumn30_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Updated";
	temp.width = 10;
	temp.labelFunction = getMerged;
	temp.sortCompareFunction = sortMerged;
	temp.itemRenderer = _gedcom_ClassFactory30_c();
	return temp;
}

private function _gedcom_ClassFactory30_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = org.werelate.comps.MatchItemRenderer;
	return temp;
}

/**
 * @private
 **/
public function __matchesDataGrid_itemRollOver(event:mx.events.ListEvent):void
{
	matchesRollOverIndex = event.rowIndex
}

/**
 * @private
 **/
public function __matchesDataGrid_creationComplete(event:mx.events.FlexEvent):void
{
	onMatchesDataGridCreationComplete(event)
}

/**
 * @private
 **/
public function __matchesDataGrid_click(event:flash.events.MouseEvent):void
{
	onClick(matchesDataGrid.selectedItem, ModelUtils.MATCHES)
}

/**
 * @private
 **/
public function __matchesDataGrid_change(event:mx.events.ListEvent):void
{
	onChange(matchesDataGrid.selectedItem, ModelUtils.MATCHES, matchesDataGrid.selectedIndex != matchesRollOverIndex)
}

/**
 * @private
 **/
public function ___gedcom_Button5_click(event:flash.events.MouseEvent):void
{
	mc.readyToImport()
}

/**
 * @private
 **/
public function ___gedcom_Button6_click(event:flash.events.MouseEvent):void
{
	mc.visitUserTalk()
}

/**
 * @private
 **/
public function ___gedcom_Button7_click(event:flash.events.MouseEvent):void
{
	mc.returnToReview()
}

/**
 * @private
 **/
public function ___gedcom_Button8_click(event:flash.events.MouseEvent):void
{
	mc.putOnHold()
}


	//	binding mgmt
    private function _gedcom_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (TABS);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                tabs.dataProvider = _sourceFunctionReturnValue;
            },
            "tabs.dataProvider");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (headerFontSize);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                _gedcom_Label1.setStyle("fontSize", _sourceFunctionReturnValue);
            },
            "_gedcom_Label1.fontSize");
        result[1] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.nextSteps);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Text1.htmlText = _sourceFunctionReturnValue;
            },
            "_gedcom_Text1.htmlText");
        result[2] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (model.isUpdatable);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                _gedcom_Button3.enabled = _sourceFunctionReturnValue;
            },
            "_gedcom_Button3.enabled");
        result[3] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (headerFontSize);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                _gedcom_Label2.setStyle("fontSize", _sourceFunctionReturnValue);
            },
            "_gedcom_Label2.fontSize");
        result[4] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem1.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem1.width");
        result[5] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem2.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem2.width");
        result[6] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (warningLevelFormatter.format(model.warningLevel)) + "%";
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label4.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label4.text");
        result[7] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem3.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem3.width");
        result[8] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.warningComment);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Text4.htmlText = _sourceFunctionReturnValue;
            },
            "_gedcom_Text4.htmlText");
        result[9] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_Text4.width = _sourceFunctionReturnValue;
            },
            "_gedcom_Text4.width");
        result[10] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem4.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem4.width");
        result[11] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem5.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem5.width");
        result[12] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.duplicateCount);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label6.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label6.text");
        result[13] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem6.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem6.width");
        result[14] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.duplicateComment);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Text5.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Text5.text");
        result[15] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_Text5.width = _sourceFunctionReturnValue;
            },
            "_gedcom_Text5.width");
        result[16] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem7.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem7.width");
        result[17] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem8.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem8.width");
        result[18] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.totalNonExcludedSources);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label8.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label8.text");
        result[19] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem9.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem9.width");
        result[20] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (headerFontSize);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                _gedcom_Label9.setStyle("fontSize", _sourceFunctionReturnValue);
            },
            "_gedcom_Label9.fontSize");
        result[21] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (mu.getPersonFullName(model.primaryPerson)) + "  (" + (model.primaryPerson.event_fact.(@type=='Birth').@date) + " - " + (model.primaryPerson.event_fact.(@type=='Death').@date) + ")";
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label10.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label10.text");
        result[22] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (headerFontSize);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                _gedcom_Label11.setStyle("fontSize", _sourceFunctionReturnValue);
            },
            "_gedcom_Label11.fontSize");
        result[23] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem10.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem10.width");
        result[24] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem11.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem11.width");
        result[25] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.peopleToImport) + " / " + (model.peopleMatched) + " / " + (model.peopleExcluded);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label13.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label13.text");
        result[26] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem12.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem12.width");
        result[27] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem13.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem13.width");
        result[28] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem14.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem14.width");
        result[29] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.familiesToImport) + " / " + (model.familiesMatched) + " / " + (model.familiesExcluded);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label16.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label16.text");
        result[30] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem15.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem15.width");
        result[31] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem16.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem16.width");
        result[32] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem17.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem17.width");
        result[33] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.warningsRead) + " / " + (model.warningsUnread);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label19.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label19.text");
        result[34] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem18.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem18.width");
        result[35] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem19.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem19.width");
        result[36] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem20.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem20.width");
        result[37] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.placesMatched) + " / " + (model.placesUnmatched);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label22.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label22.text");
        result[38] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem21.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem21.width");
        result[39] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem22.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem22.width");
        result[40] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem23.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem23.width");
        result[41] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.sourcesToImport) + " / " + (model.sourcesMatched) + " / " + (model.sourcesExcluded) + " / " + (model.sourcesCitationOnly);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label25.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label25.text");
        result[42] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem24.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem24.width");
        result[43] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsLabelWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem25.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem25.width");
        result[44] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsNumberWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem26.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem26.width");
        result[45] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.matchesMatched) + " / " + (model.matchesUnmatched) + " / " + (model.matchesUndecided);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Label28.text = _sourceFunctionReturnValue;
            },
            "_gedcom_Label28.text");
        result[46] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (statsCommentWidth);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _gedcom_GridItem27.width = _sourceFunctionReturnValue;
            },
            "_gedcom_GridItem27.width");
        result[47] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (model.people);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                peopleDataGrid.dataProvider = _sourceFunctionReturnValue;
            },
            "peopleDataGrid.dataProvider");
        result[48] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (model.families);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                familiesDataGrid.dataProvider = _sourceFunctionReturnValue;
            },
            "familiesDataGrid.dataProvider");
        result[49] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (model.warnings);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                warningsDataGrid.dataProvider = _sourceFunctionReturnValue;
            },
            "warningsDataGrid.dataProvider");
        result[50] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (model.places);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                placesDataGrid.dataProvider = _sourceFunctionReturnValue;
            },
            "placesDataGrid.dataProvider");
        result[51] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (model.sources);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                sourcesDataGrid.dataProvider = _sourceFunctionReturnValue;
            },
            "sourcesDataGrid.dataProvider");
        result[52] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (model.matches);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                matchesDataGrid.dataProvider = _sourceFunctionReturnValue;
            },
            "matchesDataGrid.dataProvider");
        result[53] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (headerFontSize);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                _gedcom_Label30.setStyle("fontSize", _sourceFunctionReturnValue);
            },
            "_gedcom_Label30.fontSize");
        result[54] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (model.importInstructions);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _gedcom_Text7.htmlText = _sourceFunctionReturnValue;
            },
            "_gedcom_Text7.htmlText");
        result[55] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (model.isImportable);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                _gedcom_Button5.enabled = _sourceFunctionReturnValue;
            },
            "_gedcom_Button5.enabled");
        result[56] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (model.isReturnable);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                _gedcom_Button6.visible = _sourceFunctionReturnValue;
            },
            "_gedcom_Button6.visible");
        result[57] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (model.isReturnable);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                _gedcom_Button7.visible = _sourceFunctionReturnValue;
            },
            "_gedcom_Button7.visible");
        result[58] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (model.isHoldable);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                _gedcom_Button8.visible = _sourceFunctionReturnValue;
            },
            "_gedcom_Button8.visible");
        result[59] = binding;

        return result;
    }

    private function _gedcom_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (TABS);
		[Binding(id='1')]
		destination = (headerFontSize);
		[Binding(id='2')]
		destination = (model.nextSteps);
		[Binding(id='3')]
		destination = (model.isUpdatable);
		[Binding(id='4')]
		destination = (headerFontSize);
		[Binding(id='5')]
		destination = (statsLabelWidth);
		[Binding(id='6')]
		destination = (statsNumberWidth);
		[Binding(id='7')]
		destination = (warningLevelFormatter.format(model.warningLevel)) + "%";
		[Binding(id='8')]
		destination = (statsCommentWidth);
		[Binding(id='9')]
		destination = (model.warningComment);
		[Binding(id='10')]
		destination = (statsCommentWidth);
		[Binding(id='11')]
		destination = (statsLabelWidth);
		[Binding(id='12')]
		destination = (statsNumberWidth);
		[Binding(id='13')]
		destination = (model.duplicateCount);
		[Binding(id='14')]
		destination = (statsCommentWidth);
		[Binding(id='15')]
		destination = (model.duplicateComment);
		[Binding(id='16')]
		destination = (statsCommentWidth);
		[Binding(id='17')]
		destination = (statsLabelWidth);
		[Binding(id='18')]
		destination = (statsNumberWidth);
		[Binding(id='19')]
		destination = (model.totalNonExcludedSources);
		[Binding(id='20')]
		destination = (statsCommentWidth);
		[Binding(id='21')]
		destination = (headerFontSize);
		[Binding(id='22')]
		destination = (mu.getPersonFullName(model.primaryPerson)) + "  (" + (model.primaryPerson.event_fact.(@type=='Birth').@date) + " - " + (model.primaryPerson.event_fact.(@type=='Death').@date) + ")";
		[Binding(id='23')]
		destination = (headerFontSize);
		[Binding(id='24')]
		destination = (statsLabelWidth);
		[Binding(id='25')]
		destination = (statsNumberWidth);
		[Binding(id='26')]
		destination = (model.peopleToImport) + " / " + (model.peopleMatched) + " / " + (model.peopleExcluded);
		[Binding(id='27')]
		destination = (statsCommentWidth);
		[Binding(id='28')]
		destination = (statsLabelWidth);
		[Binding(id='29')]
		destination = (statsNumberWidth);
		[Binding(id='30')]
		destination = (model.familiesToImport) + " / " + (model.familiesMatched) + " / " + (model.familiesExcluded);
		[Binding(id='31')]
		destination = (statsCommentWidth);
		[Binding(id='32')]
		destination = (statsLabelWidth);
		[Binding(id='33')]
		destination = (statsNumberWidth);
		[Binding(id='34')]
		destination = (model.warningsRead) + " / " + (model.warningsUnread);
		[Binding(id='35')]
		destination = (statsCommentWidth);
		[Binding(id='36')]
		destination = (statsLabelWidth);
		[Binding(id='37')]
		destination = (statsNumberWidth);
		[Binding(id='38')]
		destination = (model.placesMatched) + " / " + (model.placesUnmatched);
		[Binding(id='39')]
		destination = (statsCommentWidth);
		[Binding(id='40')]
		destination = (statsLabelWidth);
		[Binding(id='41')]
		destination = (statsNumberWidth);
		[Binding(id='42')]
		destination = (model.sourcesToImport) + " / " + (model.sourcesMatched) + " / " + (model.sourcesExcluded) + " / " + (model.sourcesCitationOnly);
		[Binding(id='43')]
		destination = (statsCommentWidth);
		[Binding(id='44')]
		destination = (statsLabelWidth);
		[Binding(id='45')]
		destination = (statsNumberWidth);
		[Binding(id='46')]
		destination = (model.matchesMatched) + " / " + (model.matchesUnmatched) + " / " + (model.matchesUndecided);
		[Binding(id='47')]
		destination = (statsCommentWidth);
		[Binding(id='48')]
		destination = (model.people);
		[Binding(id='49')]
		destination = (model.families);
		[Binding(id='50')]
		destination = (model.warnings);
		[Binding(id='51')]
		destination = (model.places);
		[Binding(id='52')]
		destination = (model.sources);
		[Binding(id='53')]
		destination = (model.matches);
		[Binding(id='54')]
		destination = (headerFontSize);
		[Binding(id='55')]
		destination = (model.importInstructions);
		[Binding(id='56')]
		destination = (model.isImportable);
		[Binding(id='57')]
		destination = (model.isReturnable);
		[Binding(id='58')]
		destination = (model.isReturnable);
		[Binding(id='59')]
		destination = (model.isHoldable);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (gedcom)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;


	mx_internal static var _gedcom_StylesInit_done:Boolean = false;

	mx_internal function _gedcom_StylesInit():void
	{
		//	only add our style defs to the StyleManager once
		if (mx_internal::_gedcom_StylesInit_done)
			return;
		else
			mx_internal::_gedcom_StylesInit_done = true;

		var style:CSSStyleDeclaration;
		var effects:Array;

		// TabBar
		style = StyleManager.getStyleDeclaration("TabBar");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("TabBar", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.borderStyle = "solid";
				this.paddingTop = 4;
				this.borderColor = 0xaab3b3;
				this.backgroundColor = 0xffffff;
				this.horizontalAlign = "left";
				this.fontSize = 11;
				this.horizontalGap = -1;
				this.paddingLeft = 3;
				this.paddingRight = 3;
			};
		}
		// PopUpWindowInset
		style = StyleManager.getStyleDeclaration(".PopUpWindowInset");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".PopUpWindowInset", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.borderStyle = "solid";
				this.borderColor = 0x696969;
				this.paddingTop = 0;
				this.backgroundColor = 0xffffff;
				this.borderThickness = 1;
				this.fontSize = 12;
				this.paddingBottom = 5;
				this.paddingLeft = 0;
				this.backgroundAlpha = 1;
				this.paddingRight = 0;
			};
		}
		// Button
		style = StyleManager.getStyleDeclaration("Button");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("Button", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.fontSize = 11;
			};
		}
		// ApplicationControlBar
		style = StyleManager.getStyleDeclaration("ApplicationControlBar");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("ApplicationControlBar", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.cornerRadius = 4;
				this.verticalAlign = "middle";
				this.fillColors = [0x123d91, 0x5799f9];
				this.fillAlphas = [1, 1];
			};
		}
		// Alert
		style = StyleManager.getStyleDeclaration("Alert");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("Alert", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.borderColor = 0x98b0d8;
				this.borderThicknessBottom = 4;
				this.borderThicknessRight = 4;
				this.backgroundColor = 0xffffff;
				this.color = 0x000000;
				this.cornerRadius = 5;
				this.borderThicknessLeft = 4;
				this.borderAlpha = 1;
				this.backgroundAlpha = 1;
				this.paddingBottom = 8;
			};
		}
		// PopUpWindow
		style = StyleManager.getStyleDeclaration(".PopUpWindow");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".PopUpWindow", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.borderStyle = "solid";
				this.borderColor = 0xdcdcdc;
				this.backgroundColor = 0xdcdcdc;
				this.borderThickness = 10;
				this.cornerRadius = 5;
				this.borderAlpha = 1;
				this.backgroundAlpha = 1;
			};
		}
		// Application
		style = StyleManager.getStyleDeclaration("Application");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("Application", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.modalTransparency = 0.3;
				this.modalTransparencyColor = 0x000000;
				this.fontSize = 12;
			};
		}
		// Tab
		style = StyleManager.getStyleDeclaration("Tab");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("Tab", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.paddingLeft = 4;
				this.paddingRight = 4;
			};
		}
		// TitleWindow
		style = StyleManager.getStyleDeclaration("TitleWindow");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("TitleWindow", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.borderColor = 0x98b0d8;
				this.borderThicknessBottom = 4;
				this.borderThicknessRight = 4;
				this.backgroundColor = 0xffffff;
				this.color = 0x000000;
				this.cornerRadius = 5;
				this.borderThicknessLeft = 4;
				this.borderAlpha = 1;
				this.backgroundAlpha = 1;
				this.paddingBottom = 8;
			};
		}

		StyleManager.mx_internal::initProtoChainRoots();
	}


[Embed(source='/images/arrow_r.png')]
 private var _embed_mxml__images_arrow_r_png_1114845184:Class;


    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

}

}
